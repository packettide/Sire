<?php

class {{ Names }}Controller extends BaseController {

	/**
	 * {{ Name }} Repository
	 *
	 * @var {{ Name }}
	 */
	protected ${{ name }};

	public function __construct({{ Name }} ${{ name }})
	{
		$this->{{ name }} = ${{ name }};
	}

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		${{ names }} = $this->{{ name }}->all();

		return View::make('{{ names }}.index', compact('{{ names }}'));
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		$admin = new Bree('{{ Name }}', array());

		$data = array (
			"admin" => $admin
		);

		return View::make('{{ names }}.create', $data);
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		$input = Input::all();
		$validation = Validator::make($input, {{ Name }}::$rules);

		if ($validation->passes())
		{
			$this->{{ name }}->create($input);

			return Redirect::route('{{ names }}.index');
		}

		return Redirect::route('{{ names }}.create')
			->withInput()
			->withErrors($validation)
			->with('message', 'There were validation errors.');
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		${{ name }} = $this->{{ name }}->findOrFail($id);

		return View::make('{{ names }}.show', compact('{{ name }}'));
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$admin = new Bree('{{ Name }}', array());

		$admin->find($id);

		$data = array (
			"admin" => $admin
		);

		if (is_null($admin->baseModel))
		{
			return Redirect::route('{{ name }}.index');
		}

		return View::make('{{ names }}.edit', $data);
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$input = array_except(Input::all(), '_method');
		$validation = Validator::make($input, {{ Name }}::$rules);

		if ($validation->passes())
		{
			${{ name }} = $this->{{ name }}->find($id);
			${{ name }}->update($input);

			return Redirect::route('{{ names }}.index');
		}

		return Redirect::route('{{ names }}.edit', $id)
			->withInput()
			->withErrors($validation)
			->with('message', 'There were validation errors.');
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$this->{{ name }}->find($id)->delete();

		return Redirect::route('{{ names }}.index');
	}

}
